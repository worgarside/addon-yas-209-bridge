[tool.poetry]
name = "addon-yas-209-bridge"
version = "1.1.0"
description = "Home Assistant addon to act as a reporting bridge for the Yamaha YAS-209 soundbar"
authors = ["Will Garside <worgarside@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "addon_yas_209_bridge" }]

[tool.poetry.dependencies]
python = "^3.10"
paramiko = "^3.4.0"
requests = "^2.32.2"
lxml = "^5.2.1"
wg-utilities = {version = "*", extras = ["devices-yamaha-yas-209", "exceptions"]}

[tool.poetry.group.dev.dependencies]
pylint = "<4.0.0"
pylint-strict-informational = "^0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


# Tool Configs

[tool.black]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov-report=xml",
    "--cov=./",
    "-n",
    "auto",
]
xfail_strict = true
log_cli_level = "warning"
# pythonpath = ["wg_utilities"]
# testpaths = ["tests"]
env = []
filterwarnings = [
    "ignore::DeprecationWarning:boto.*:",
    "ignore::DeprecationWarning:pkg_resources.*:",
]

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "def __repr__", "def __str__", "@overload"]

[tool.mypy]
exclude = ["_local_sandbox"]
show_error_codes = true
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true

[tool.codespell]
skip = '*.json,*.csv,*.xml,*.txt,*.lock'

[tool.pycln]
path = "*"
expand_stars = true
all = true
no_gitignore = false

[tool.ruff]
# Longer line length to avoid throwing errors in case where black doesn't
# wrap the lines (e.g. a long URL).
line-length = 120
select = [
    # https://github.com/charliermarsh/ruff#supported-rules
    "B",   # Flake8 bugbear
    "C4",  # Flake8 comprehensions
    "D",   # pydocstyle
    "E",   # Pycodestyle errors
    "ERA", # Eradicate commented out code
    "F",   # Pyflakes
    "N",   # PEP8 Naming
    "RUF", # Ruff-specific rules
    "UP",  # PyUpgrade
    "W",   # Pycodestyle warnings
]
ignore = [
    "D107",  # public-init
    "D202",  # no-blank-line-after-function
    "D203",  # one-blank-line-before-class
    "D213",  # multi-line-summary-second-line
    "D400",  # first-line-end-with-period
    "D406",  # new-line-after-section-name
    "D407",  # dashed-underline-after-section
    "UP037", # quoted-annotation
]

[tool.ruff.mccabe]
max-complexity = 20
